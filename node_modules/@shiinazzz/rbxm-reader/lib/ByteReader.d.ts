declare class ByteReader extends Uint8Array {
    index: number;
    chunkBuffer: Uint8Array;
    static ParseFloat(long: any): number;
    static ParseRBXFloat(long: any): number;
    static ParseDouble(long0: any, long1: any): number;
    constructor(...args: any[]);
    SetIndex(n: any): void;
    GetIndex(): number;
    GetRemaining(): number;
    GetLength(): number;
    Jump(n: any): void;
    Array(n: any): Uint8Array;
    Match(arr: any): boolean;
    Byte(): number;
    UInt8(): number;
    UInt16LE(): number;
    UInt16BE(): number;
    UInt32LE(): number;
    UInt32BE(): number;
    Int8(): number;
    Int16LE(): number;
    Int16BE(): number;
    Int32LE(): number;
    Int32BE(): number;
    FloatLE(): number;
    FloatBE(): number;
    DoubleLE(): number;
    DoubleBE(): number;
    String(n: any): string;
    LZ4(buffer: any): any;
    RBXFloatLE(): number;
    RBXFloatBE(): number;
    RBXInterleavedUint32(count: any, result: any): any;
    RBXInterleavedInt32(count: any, result: any): any;
    RBXInterleavedFloat(count: any, result: any): any;
}
export default ByteReader;
